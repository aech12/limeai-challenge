version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aipatients_db
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-patients_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com  # Change this to your email
      PGADMIN_DEFAULT_PASSWORD: admin         # Change this to a secure password
    ports:
      - "5050:80"  # Access pgAdmin at http://localhost:5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # Optional: Persist pgAdmin config
    networks:
      - app-network
    depends_on:
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-patients_db}
    volumes:
      - ./backend/src:/app/src
      - ./backend/node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://localhost:3001

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge